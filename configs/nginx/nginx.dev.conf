server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    location / {
        resolver local=on;

        access_by_lua_block {
            local redis = require "resty.redis"
            red = redis:new()
            red:set_timeouts(1000, 1000, 1000)

            local ok, err = red:connect("redis", 6379)

            if not ok then
                -- ngx.say("failed to connect: ", err)
                return "500"
            end

            local limit_left, err = red:get(ngx.var.remote_addr)
            if not limit_left then
                -- ngx.say("failed to get " .. ngx.var.remote_addr, err)
                return "500"
            end

            if limit_left == ngx.null then
                local res, err = red:set(ngx.var.remote_addr, 1000)
                if not res then
                    -- ngx.say("failed to set " .. ngx.var.remote_addr, err)
                    return "500"
                end
            else
                if tonumber(limit_left) > 0 then
                    local res, err = red:set(ngx.var.remote_addr, limit_left-1)
                    if not res then
                        -- ngx.say("failed to decrement " .. ngx.var.remote_addr, err)
                        return "500"
                    end
                else
                    -- ngx.say("Request blocked for " .. ngx.var.remote_addr)
                    return "500"
                end
            end 

            local ok, err = red:set_keepalive(10000, 100)
            if not ok then
                -- ngx.say("failed to set keepalive: ", err)
                return "500"
            end
        }

        root /usr/share/nginx/html;
        default_type "text/html";
        try_files $uri $uri.html $uri/index.html index.html =404;
    }

    # serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    /usr/share/nginx;
      expires 30d;
    }

    # serve favicon.ico
    location /favicon.ico  {
      alias     /usr/share/nginx/favicon.ico;
      expires   60d;
    }

    # error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
